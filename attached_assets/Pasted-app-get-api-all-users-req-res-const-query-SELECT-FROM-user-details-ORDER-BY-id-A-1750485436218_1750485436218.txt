app.get('/api/all-users', (req, res) => {
  const query = 'SELECT * FROM user_details ORDER BY id ASC';
  db.query(query, (err, results) => {
    if (err) return res.status(500).json({ message: 'Database error' });
    res.json(results);
  });
});
app.get('/api/user-domain-answers/:mobileNumber', (req, res) => {
  const { mobileNumber } = req.params;

  const query = 'SELECT * FROM user_domain_answers WHERE mobileNumber = ?';
  db.query(query, [mobileNumber], (err, results) => {
    if (err) {
      console.error('DB error:', err);
      return res.status(500).json({ error: 'Database error' });
    }

    if (results.length === 0) {
      return res.status(404).json({ error: 'No data found' });
    }

    // ✅ Return only the first row object, not an array
    res.json(results[0]);
  });
});


// ✅ GET user domain answers by mobileNumber
// app.get('/api/user-domain-answers/:mobileNumber', (req, res) => {
//   const { mobileNumber } = req.params;

//   const query = 'SELECT * FROM user_domain_answers WHERE mobileNumber = ?';
//   db.query(query, [mobileNumber], (err, results) => {
//     if (err) {
//       console.error('DB error:', err);
//       return res.status(500).json({ error: 'Database error' });
//     }

//     if (results.length === 0) {
//       return res.status(404).json({ error: 'No data found' });
//     }

//     res.json(results);
//   });
// });

// ✅ GET all child development questions
app.get('/api/showquestions', (req, res) => {
  const query = 'SELECT * FROM child_development';

  db.query(query, (err, results) => {
    if (err) {
      console.error('Error fetching questions:', err);
      return res.status(500).json({ error: 'Server error' });
    }
    res.json(results);
  });
});

// ✅ Admin login
app.post('/api/admin-login', (req, res) => {
  const { email, password } = req.body;

  const query = 'SELECT * FROM admin_users WHERE email = ? AND password = ?';
  db.query(query, [email, password], (err, results) => {
    if (err) return res.status(500).json({ success: false, message: 'Server error' });

    if (results.length > 0) {
      res.status(200).json({ success: true });
    } else {
      res.status(401).json({ success: false, message: 'Invalid email or password' });
    }
  });
});

// ✅ Admin change password
app.post('/api/change-password', (req, res) => {
  const { email, oldPassword, newPassword } = req.body;

  if (!email || !oldPassword || !newPassword) {
    return res.status(400).json({ message: 'All fields are required' });
  }

  const checkUserQuery = 'SELECT * FROM admin_users WHERE email = ?';
  db.query(checkUserQuery, [email], (err, results) => {
    if (err) return res.status(500).json({ message: 'Database error' });
    if (results.length === 0) return res.status(404).json({ message: 'Admin not found' });

    const admin = results[0];
    if (admin.password !== oldPassword) {
      return res.status(401).json({ message: 'Incorrect old password' });
    }

    const updateQuery = 'UPDATE admin_users SET password = ? WHERE email = ?';
    db.query(updateQuery, [newPassword, email], (updateErr) => {
      if (updateErr) return res.status(500).json({ message: 'Update failed' });
      res.json({ message: 'Password changed successfully' });
    });
  });
});

// ✅ Filter child questions by month
app.get('/api/questions', (req, res) => {
  const { month } = req.query;
  let query = 'SELECT * FROM child_development';
  const params = [];

  if (month) {
    query += ' WHERE month = ?';
    params.push(month);
  }

  db.query(query, params, (err, results) => {
    if (err) {
      console.error('❌ Error fetching questions:', err);
      return res.status(500).json({ error: 'Failed to fetch questions' });
    }
    res.json(results);
  });
});

// ✅ Update specific question field
app.put('/api/questions/:id', (req, res) => {
  const { id } = req.params;
  const { field, value } = req.body;

  if (!field || typeof value !== 'string') {
    return res.status(400).json({ error: 'Invalid field or value' });
  }

  const query = `UPDATE child_development SET ?? = ? WHERE id = ?`;
  const values = [field, value, id];

  db.query(query, values, (err, result) => {
    if (err) {
      console.error('❌ Update error:', err);
      return res.status(500).json({ error: 'Failed to update question' });
    }
    res.json({ message: '✅ Question updated successfully' });
  });
});

// ✅ Security PIN verification
app.post('/api/verify-pin', (req, res) => {
  const { mobileNumber, securityPIN } = req.body;

  if (!mobileNumber || !securityPIN) {
    return res.status(400).json({ success: false, message: 'Mobile number and PIN required' });
  }

  const query = 'SELECT security_pin FROM user_details WHERE mobile_number = ?';
  db.query(query, [mobileNumber], (err, results) => {
    if (err) {
      console.error('DB error:', err);
      return res.status(500).json({ success: false, message: 'Database error' });
    }

    if (results.length === 0) {
      return res.status(404).json({ success: false, message: 'User not found' });
    }

    const storedPin = results[0].security_pin;
    if (securityPIN === storedPin) {
      return res.json({ success: true, message: 'PIN verified' });
    } else {
      return res.json({ success: false, message: 'Incorrect PIN' });
    }
  });
});

// ✅ Default route for unmatched paths
app.use((req, res) => {
  res.status(404).json({ error: 'Route not found' });
});  